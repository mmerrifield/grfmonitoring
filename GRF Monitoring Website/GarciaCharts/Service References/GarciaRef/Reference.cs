//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace GarciaCharts.GarciaRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SilverlightServiceCallResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class SilverlightServiceCallResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageField;
        
        private GarciaCharts.GarciaRef.ServiceCallResult serviceCallResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GarciaCharts.GarciaRef.ServiceCallResult serviceCallResult {
            get {
                return this.serviceCallResultField;
            }
            set {
                if ((this.serviceCallResultField.Equals(value) != true)) {
                    this.serviceCallResultField = value;
                    this.RaisePropertyChanged("serviceCallResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCallResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum ServiceCallResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeeklyTemp", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class WeeklyTemp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime dateField;
        
        private double movAvgField;
        
        private string siteIDField;
        
        private string siteNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double movAvg {
            get {
                return this.movAvgField;
            }
            set {
                if ((this.movAvgField.Equals(value) != true)) {
                    this.movAvgField = value;
                    this.RaisePropertyChanged("movAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.siteIDField, value) != true)) {
                    this.siteIDField = value;
                    this.RaisePropertyChanged("siteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.siteNameField, value) != true)) {
                    this.siteNameField = value;
                    this.RaisePropertyChanged("siteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaxTemp", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MaxTemp : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string commentsField;
        
        private int daysExceedField;
        
        private string hoboIDField;
        
        private string maxField;
        
        private double percentField;
        
        private string siteIDField;
        
        private string siteNameField;
        
        private string typeField;
        
        private string yearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                if ((object.ReferenceEquals(this.commentsField, value) != true)) {
                    this.commentsField = value;
                    this.RaisePropertyChanged("comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int daysExceed {
            get {
                return this.daysExceedField;
            }
            set {
                if ((this.daysExceedField.Equals(value) != true)) {
                    this.daysExceedField = value;
                    this.RaisePropertyChanged("daysExceed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hoboID {
            get {
                return this.hoboIDField;
            }
            set {
                if ((object.ReferenceEquals(this.hoboIDField, value) != true)) {
                    this.hoboIDField = value;
                    this.RaisePropertyChanged("hoboID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string max {
            get {
                return this.maxField;
            }
            set {
                if ((object.ReferenceEquals(this.maxField, value) != true)) {
                    this.maxField = value;
                    this.RaisePropertyChanged("max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double percent {
            get {
                return this.percentField;
            }
            set {
                if ((this.percentField.Equals(value) != true)) {
                    this.percentField = value;
                    this.RaisePropertyChanged("percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.siteIDField, value) != true)) {
                    this.siteIDField = value;
                    this.RaisePropertyChanged("siteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.siteNameField, value) != true)) {
                    this.siteNameField = value;
                    this.RaisePropertyChanged("siteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string year {
            get {
                return this.yearField;
            }
            set {
                if ((object.ReferenceEquals(this.yearField, value) != true)) {
                    this.yearField = value;
                    this.RaisePropertyChanged("year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GarciaSite", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class GarciaSite : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string colorField;
        
        private string dataDateRangeField;
        
        private System.Nullable<System.DateTime> dataEndDateField;
        
        private System.Nullable<System.DateTime> dataStartDateField;
        
        private bool isSelectedField;
        
        private string siteIDField;
        
        private string siteNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> yearsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataDateRange {
            get {
                return this.dataDateRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.dataDateRangeField, value) != true)) {
                    this.dataDateRangeField = value;
                    this.RaisePropertyChanged("dataDateRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dataEndDate {
            get {
                return this.dataEndDateField;
            }
            set {
                if ((this.dataEndDateField.Equals(value) != true)) {
                    this.dataEndDateField = value;
                    this.RaisePropertyChanged("dataEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dataStartDate {
            get {
                return this.dataStartDateField;
            }
            set {
                if ((this.dataStartDateField.Equals(value) != true)) {
                    this.dataStartDateField = value;
                    this.RaisePropertyChanged("dataStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSelected {
            get {
                return this.isSelectedField;
            }
            set {
                if ((this.isSelectedField.Equals(value) != true)) {
                    this.isSelectedField = value;
                    this.RaisePropertyChanged("isSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.siteIDField, value) != true)) {
                    this.siteIDField = value;
                    this.RaisePropertyChanged("siteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.siteNameField, value) != true)) {
                    this.siteNameField = value;
                    this.RaisePropertyChanged("siteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> years {
            get {
                return this.yearsField;
            }
            set {
                if ((object.ReferenceEquals(this.yearsField, value) != true)) {
                    this.yearsField = value;
                    this.RaisePropertyChanged("years");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="GarciaRef.SLService")]
    public interface SLService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SLService/getMWATData", ReplyAction="urn:SLService/getMWATDataResponse")]
        System.IAsyncResult BegingetMWATData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> EndgetMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SLService/getMaxMWATData", ReplyAction="urn:SLService/getMaxMWATDataResponse")]
        System.IAsyncResult BegingetMaxMWATData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> EndgetMaxMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SLService/getMWMTData", ReplyAction="urn:SLService/getMWMTDataResponse")]
        System.IAsyncResult BegingetMWMTData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> EndgetMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SLService/getMaxMWMTData", ReplyAction="urn:SLService/getMaxMWMTDataResponse")]
        System.IAsyncResult BegingetMaxMWMTData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> EndgetMaxMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SLService/getSites", ReplyAction="urn:SLService/getSitesResponse")]
        System.IAsyncResult BegingetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> EndgetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SLServiceChannel : GarciaCharts.GarciaRef.SLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMWATDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMWATDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GarciaCharts.GarciaRef.SilverlightServiceCallResult sr {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaxMWATDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaxMWATDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GarciaCharts.GarciaRef.SilverlightServiceCallResult sr {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMWMTDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMWMTDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GarciaCharts.GarciaRef.SilverlightServiceCallResult sr {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getMaxMWMTDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getMaxMWMTDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GarciaCharts.GarciaRef.SilverlightServiceCallResult sr {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GarciaCharts.GarciaRef.SilverlightServiceCallResult sr {
            get {
                base.RaiseExceptionIfNecessary();
                return ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(this.results[0]));
            }
        }
        
        public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SLServiceClient : System.ServiceModel.ClientBase<GarciaCharts.GarciaRef.SLService>, GarciaCharts.GarciaRef.SLService {
        
        private BeginOperationDelegate onBegingetMWATDataDelegate;
        
        private EndOperationDelegate onEndgetMWATDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetMWATDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaxMWATDataDelegate;
        
        private EndOperationDelegate onEndgetMaxMWATDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaxMWATDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMWMTDataDelegate;
        
        private EndOperationDelegate onEndgetMWMTDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetMWMTDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetMaxMWMTDataDelegate;
        
        private EndOperationDelegate onEndgetMaxMWMTDataDelegate;
        
        private System.Threading.SendOrPostCallback ongetMaxMWMTDataCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSitesDelegate;
        
        private EndOperationDelegate onEndgetSitesDelegate;
        
        private System.Threading.SendOrPostCallback ongetSitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SLServiceClient() {
        }
        
        public SLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getMWATDataCompletedEventArgs> getMWATDataCompleted;
        
        public event System.EventHandler<getMaxMWATDataCompletedEventArgs> getMaxMWATDataCompleted;
        
        public event System.EventHandler<getMWMTDataCompletedEventArgs> getMWMTDataCompleted;
        
        public event System.EventHandler<getMaxMWMTDataCompletedEventArgs> getMaxMWMTDataCompleted;
        
        public event System.EventHandler<getSitesCompletedEventArgs> getSitesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GarciaCharts.GarciaRef.SLService.BegingetMWATData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMWATData(startDate, endDate, sites, ref sr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> GarciaCharts.GarciaRef.SLService.EndgetMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
            return base.Channel.EndgetMWATData(ref sr, result);
        }
        
        private System.IAsyncResult OnBegingetMWATData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> sites = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(inValues[3]));
            return ((GarciaCharts.GarciaRef.SLService)(this)).BegingetMWATData(startDate, endDate, sites, ref sr, callback, asyncState);
        }
        
        private object[] OnEndgetMWATData(System.IAsyncResult result) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = this.GetDefaultValueForInitialization<GarciaCharts.GarciaRef.SilverlightServiceCallResult>();
            System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> retVal = ((GarciaCharts.GarciaRef.SLService)(this)).EndgetMWATData(ref sr, result);
            return new object[] {
                    sr,
                    retVal};
        }
        
        private void OngetMWATDataCompleted(object state) {
            if ((this.getMWATDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMWATDataCompleted(this, new getMWATDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMWATDataAsync(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr) {
            this.getMWATDataAsync(startDate, endDate, sites, sr, null);
        }
        
        public void getMWATDataAsync(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, object userState) {
            if ((this.onBegingetMWATDataDelegate == null)) {
                this.onBegingetMWATDataDelegate = new BeginOperationDelegate(this.OnBegingetMWATData);
            }
            if ((this.onEndgetMWATDataDelegate == null)) {
                this.onEndgetMWATDataDelegate = new EndOperationDelegate(this.OnEndgetMWATData);
            }
            if ((this.ongetMWATDataCompletedDelegate == null)) {
                this.ongetMWATDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMWATDataCompleted);
            }
            base.InvokeAsync(this.onBegingetMWATDataDelegate, new object[] {
                        startDate,
                        endDate,
                        sites,
                        sr}, this.onEndgetMWATDataDelegate, this.ongetMWATDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GarciaCharts.GarciaRef.SLService.BegingetMaxMWATData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaxMWATData(year, sites, ref sr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> GarciaCharts.GarciaRef.SLService.EndgetMaxMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
            return base.Channel.EndgetMaxMWATData(ref sr, result);
        }
        
        private System.IAsyncResult OnBegingetMaxMWATData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string year = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> sites = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(inValues[2]));
            return ((GarciaCharts.GarciaRef.SLService)(this)).BegingetMaxMWATData(year, sites, ref sr, callback, asyncState);
        }
        
        private object[] OnEndgetMaxMWATData(System.IAsyncResult result) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = this.GetDefaultValueForInitialization<GarciaCharts.GarciaRef.SilverlightServiceCallResult>();
            System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> retVal = ((GarciaCharts.GarciaRef.SLService)(this)).EndgetMaxMWATData(ref sr, result);
            return new object[] {
                    sr,
                    retVal};
        }
        
        private void OngetMaxMWATDataCompleted(object state) {
            if ((this.getMaxMWATDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaxMWATDataCompleted(this, new getMaxMWATDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaxMWATDataAsync(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr) {
            this.getMaxMWATDataAsync(year, sites, sr, null);
        }
        
        public void getMaxMWATDataAsync(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, object userState) {
            if ((this.onBegingetMaxMWATDataDelegate == null)) {
                this.onBegingetMaxMWATDataDelegate = new BeginOperationDelegate(this.OnBegingetMaxMWATData);
            }
            if ((this.onEndgetMaxMWATDataDelegate == null)) {
                this.onEndgetMaxMWATDataDelegate = new EndOperationDelegate(this.OnEndgetMaxMWATData);
            }
            if ((this.ongetMaxMWATDataCompletedDelegate == null)) {
                this.ongetMaxMWATDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaxMWATDataCompleted);
            }
            base.InvokeAsync(this.onBegingetMaxMWATDataDelegate, new object[] {
                        year,
                        sites,
                        sr}, this.onEndgetMaxMWATDataDelegate, this.ongetMaxMWATDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GarciaCharts.GarciaRef.SLService.BegingetMWMTData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMWMTData(startDate, endDate, sites, ref sr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> GarciaCharts.GarciaRef.SLService.EndgetMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
            return base.Channel.EndgetMWMTData(ref sr, result);
        }
        
        private System.IAsyncResult OnBegingetMWMTData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> sites = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(inValues[3]));
            return ((GarciaCharts.GarciaRef.SLService)(this)).BegingetMWMTData(startDate, endDate, sites, ref sr, callback, asyncState);
        }
        
        private object[] OnEndgetMWMTData(System.IAsyncResult result) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = this.GetDefaultValueForInitialization<GarciaCharts.GarciaRef.SilverlightServiceCallResult>();
            System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> retVal = ((GarciaCharts.GarciaRef.SLService)(this)).EndgetMWMTData(ref sr, result);
            return new object[] {
                    sr,
                    retVal};
        }
        
        private void OngetMWMTDataCompleted(object state) {
            if ((this.getMWMTDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMWMTDataCompleted(this, new getMWMTDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMWMTDataAsync(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr) {
            this.getMWMTDataAsync(startDate, endDate, sites, sr, null);
        }
        
        public void getMWMTDataAsync(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, object userState) {
            if ((this.onBegingetMWMTDataDelegate == null)) {
                this.onBegingetMWMTDataDelegate = new BeginOperationDelegate(this.OnBegingetMWMTData);
            }
            if ((this.onEndgetMWMTDataDelegate == null)) {
                this.onEndgetMWMTDataDelegate = new EndOperationDelegate(this.OnEndgetMWMTData);
            }
            if ((this.ongetMWMTDataCompletedDelegate == null)) {
                this.ongetMWMTDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMWMTDataCompleted);
            }
            base.InvokeAsync(this.onBegingetMWMTDataDelegate, new object[] {
                        startDate,
                        endDate,
                        sites,
                        sr}, this.onEndgetMWMTDataDelegate, this.ongetMWMTDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GarciaCharts.GarciaRef.SLService.BegingetMaxMWMTData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetMaxMWMTData(year, sites, ref sr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> GarciaCharts.GarciaRef.SLService.EndgetMaxMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
            return base.Channel.EndgetMaxMWMTData(ref sr, result);
        }
        
        private System.IAsyncResult OnBegingetMaxMWMTData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string year = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> sites = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(inValues[2]));
            return ((GarciaCharts.GarciaRef.SLService)(this)).BegingetMaxMWMTData(year, sites, ref sr, callback, asyncState);
        }
        
        private object[] OnEndgetMaxMWMTData(System.IAsyncResult result) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = this.GetDefaultValueForInitialization<GarciaCharts.GarciaRef.SilverlightServiceCallResult>();
            System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> retVal = ((GarciaCharts.GarciaRef.SLService)(this)).EndgetMaxMWMTData(ref sr, result);
            return new object[] {
                    sr,
                    retVal};
        }
        
        private void OngetMaxMWMTDataCompleted(object state) {
            if ((this.getMaxMWMTDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getMaxMWMTDataCompleted(this, new getMaxMWMTDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getMaxMWMTDataAsync(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr) {
            this.getMaxMWMTDataAsync(year, sites, sr, null);
        }
        
        public void getMaxMWMTDataAsync(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, object userState) {
            if ((this.onBegingetMaxMWMTDataDelegate == null)) {
                this.onBegingetMaxMWMTDataDelegate = new BeginOperationDelegate(this.OnBegingetMaxMWMTData);
            }
            if ((this.onEndgetMaxMWMTDataDelegate == null)) {
                this.onEndgetMaxMWMTDataDelegate = new EndOperationDelegate(this.OnEndgetMaxMWMTData);
            }
            if ((this.ongetMaxMWMTDataCompletedDelegate == null)) {
                this.ongetMaxMWMTDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetMaxMWMTDataCompleted);
            }
            base.InvokeAsync(this.onBegingetMaxMWMTDataDelegate, new object[] {
                        year,
                        sites,
                        sr}, this.onEndgetMaxMWMTDataDelegate, this.ongetMaxMWMTDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GarciaCharts.GarciaRef.SLService.BegingetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSites(ref sr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> GarciaCharts.GarciaRef.SLService.EndgetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
            return base.Channel.EndgetSites(ref sr, result);
        }
        
        private System.IAsyncResult OnBegingetSites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(inValues[0]));
            return ((GarciaCharts.GarciaRef.SLService)(this)).BegingetSites(ref sr, callback, asyncState);
        }
        
        private object[] OnEndgetSites(System.IAsyncResult result) {
            GarciaCharts.GarciaRef.SilverlightServiceCallResult sr = this.GetDefaultValueForInitialization<GarciaCharts.GarciaRef.SilverlightServiceCallResult>();
            System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> retVal = ((GarciaCharts.GarciaRef.SLService)(this)).EndgetSites(ref sr, result);
            return new object[] {
                    sr,
                    retVal};
        }
        
        private void OngetSitesCompleted(object state) {
            if ((this.getSitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSitesCompleted(this, new getSitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSitesAsync(GarciaCharts.GarciaRef.SilverlightServiceCallResult sr) {
            this.getSitesAsync(sr, null);
        }
        
        public void getSitesAsync(GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, object userState) {
            if ((this.onBegingetSitesDelegate == null)) {
                this.onBegingetSitesDelegate = new BeginOperationDelegate(this.OnBegingetSites);
            }
            if ((this.onEndgetSitesDelegate == null)) {
                this.onEndgetSitesDelegate = new EndOperationDelegate(this.OnEndgetSites);
            }
            if ((this.ongetSitesCompletedDelegate == null)) {
                this.ongetSitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSitesCompleted);
            }
            base.InvokeAsync(this.onBegingetSitesDelegate, new object[] {
                        sr}, this.onEndgetSitesDelegate, this.ongetSitesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override GarciaCharts.GarciaRef.SLService CreateChannel() {
            return new SLServiceClientChannel(this);
        }
        
        private class SLServiceClientChannel : ChannelBase<GarciaCharts.GarciaRef.SLService>, GarciaCharts.GarciaRef.SLService {
            
            public SLServiceClientChannel(System.ServiceModel.ClientBase<GarciaCharts.GarciaRef.SLService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetMWATData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = startDate;
                _args[1] = endDate;
                _args[2] = sites;
                _args[3] = sr;
                System.IAsyncResult _result = base.BeginInvoke("getMWATData", _args, callback, asyncState);
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[3]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> EndgetMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> _result = ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp>)(base.EndInvoke("getMWATData", _args, result)));
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaxMWATData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = year;
                _args[1] = sites;
                _args[2] = sr;
                System.IAsyncResult _result = base.BeginInvoke("getMaxMWATData", _args, callback, asyncState);
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[2]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> EndgetMaxMWATData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> _result = ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp>)(base.EndInvoke("getMaxMWATData", _args, result)));
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BegingetMWMTData(System.DateTime startDate, System.DateTime endDate, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = startDate;
                _args[1] = endDate;
                _args[2] = sites;
                _args[3] = sr;
                System.IAsyncResult _result = base.BeginInvoke("getMWMTData", _args, callback, asyncState);
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[3]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> EndgetMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp> _result = ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.WeeklyTemp>)(base.EndInvoke("getMWMTData", _args, result)));
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BegingetMaxMWMTData(string year, System.Collections.ObjectModel.ObservableCollection<string> sites, ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = year;
                _args[1] = sites;
                _args[2] = sr;
                System.IAsyncResult _result = base.BeginInvoke("getMaxMWMTData", _args, callback, asyncState);
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[2]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> EndgetMaxMWMTData(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp> _result = ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.MaxTemp>)(base.EndInvoke("getMaxMWMTData", _args, result)));
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
            
            public System.IAsyncResult BegingetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.IAsyncResult _result = base.BeginInvoke("getSites", _args, callback, asyncState);
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> EndgetSites(ref GarciaCharts.GarciaRef.SilverlightServiceCallResult sr, System.IAsyncResult result) {
                object[] _args = new object[1];
                _args[0] = sr;
                System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite> _result = ((System.Collections.ObjectModel.ObservableCollection<GarciaCharts.GarciaRef.GarciaSite>)(base.EndInvoke("getSites", _args, result)));
                sr = ((GarciaCharts.GarciaRef.SilverlightServiceCallResult)(_args[0]));
                return _result;
            }
        }
    }
}
